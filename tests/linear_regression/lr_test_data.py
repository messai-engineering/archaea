import numpy as num_py

# Cost Function Tests

ZERO_ERROR_TEST_DATA_SET_X = num_py.matrix('1 2;3 4')
ZERO_ERROR_TEST_DATA_SET_Y = num_py.matrix('23;53')
ZERO_ERROR_TEST_DATA_SET_THETA = num_py.matrix('7;8')
ZERO_ERROR_TEST_DATA_SET_EXPECTED_OUTPUT = 0
ZERO_ERROR_TEST_DATA_SET_EXPECTED_OUTPUT_REGULARIZED = 0.113

NON_ZERO_ERROR_TEST_DATA_SET_X = num_py.matrix('1 2;3 4')
NON_ZERO_ERROR_TEST_DATA_SET_Y = num_py.matrix('20;50')
NON_ZERO_ERROR_TEST_DATA_SET_THETA = num_py.matrix('7;8')
NON_ZERO_ERROR_TEST_DATA_SET_EXPECTED_OUTPUT = 4.5
NON_ZERO_ERROR_TEST_DATA_SET_EXPECTED_OUTPUT_REGULARIZED = 4.613

# Hypothesis Function Tests
H_OF_THETA = num_py.dot(NON_ZERO_ERROR_TEST_DATA_SET_X, NON_ZERO_ERROR_TEST_DATA_SET_THETA)

# Gradient Descent Tests

ZERO_ITERATIONS_ZERO_ALPHA_EXPECTED = num_py.zeros((0, 1))
TWO_ITERATIONS_SMALL_ALPHA_EXPECTED = num_py.matrix('6.9993;7.9992')
TWO_ITERATIONS_BIG_ALPHA_EXPECTED = num_py.matrix('6.9965;7.996')
FIFTY_ITERATIONS_SMALL_ALPHA_EXPECTED = num_py.matrix('-4578.896975428787;-4577.90186368719')

# Trainer Tests
TRAINER_TEST_X = num_py.matrix('1 2;2 4;4 8;8 16;16 32')
TRAINER_TEST_Y = num_py.matrix('0.2;0.8;0.32;0.128;0.512')
TRAINER_TEST_VALUE = num_py.matrix('1 2 4')
TRAINER_TEST_PREDICTION = 0.08662484775490228